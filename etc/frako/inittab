# 
# /etc/inittab
#
# Generic i386 configuration
#
# 2003/11/20 Robert Schwebel <r.schwebel@pengutronix.de>
# 08.03.2004 Gert Fischer, FRAKO Kondensatoren und Anlagenbau GmbH
#            www.frako.de
#

::sysinit:/etc/init.d/banner 
::sysinit:/etc/init.d/rcS
::sysinit:/sbin/ptx-init-permissions.sh
::sysinit:/sbin/openssh-host-keygen.sh
# busybox syslogd ignores /etc/syslogd.conf
::sysinit:/sbin/syslogd -O /dev/tty8
#::sysinit:/sbin/syslogd host:514 (for remote logging)

# Start userland network services 
::sysinit:/usr/sbin/sshd -4 -f /etc/ssh/sshd_config
::sysinit:/usr/sbin/proftpd

# modem getty (serial port #1)
::once:/bin/mkdir /var/log/mgetty
::respawn:/usr/sbin/mgetty -D -s 38400 /dev/ttyS0

# serial console getty (serial port #2)
::respawn:/sbin/getty -L ttyS1 115200 vt100 

#::respawn:/usr/sbin/mgetty -s 115200 /dev/ttyS0

# put a getty on a serial line (for a terminal)
#::respawn:/usr/sbin/getty -L ttyS0 9600 vt100

# Frako
::respawn:/home/system/daemon

# ppp server COM1:
#::respawn:/usr/sbin/pppd -detach crtscts lock 10.0.0.1:10.0.0.2 /dev/tts/0 38400

# Start an "askfirst" shell on the console
# ::askfirst:-/bin/sh
::respawn:/bin/sh /home/system/startemis
#::respawn:/bin/sh -c "/home/system/startemis"
#vc/0::askfirst:-/bin/sh 
#vc/1::askfirst:-/bin/sh
vc/2::respawn:/sbin/getty 38400 vc/2
vc/3::respawn:/sbin/getty 38400 vc/3
# vc/4::respawn:/sbin/getty 38400 vc/4
# vc/5::respawn:/sbin/getty 38400 vc/5

# Stuff to do before rebooting
::ctrlaltdel:/sbin/reboot
::shutdown:/bin/umount -a -r




# Hinweise zum BusyBox-Startvorgang: (GF)
#
# Note, BusyBox init doesn't support runlevels.  The runlevels field is
# completely ignored by BusyBox init. If you want runlevels, use sysvinit.
#
#
# Format for each entry: <id>:<runlevels>:<action>:<process>
#
# <id>: WARNING: This field has a non-traditional meaning for BusyBox init!
#
#	The id field is used by BusyBox init to specify the controlling tty for
#	the specified process to run on.  The contents of this field are
#	appended to "/dev/" and used as-is.  There is no need for this field to
#	be unique, although if it isn't you may have strange results.  If this
#	field is left blank, it is completely ignored.  Also note that if
#	BusyBox detects that a serial console is in use, then all entries
#	containing non-empty id fields will _not_ be run.  BusyBox init does
#	nothing with utmp.  We don't need no stinkin' utmp.
#
# <runlevels>: The runlevels field is completely ignored.
#
# <action>: Valid actions include: sysinit, respawn, askfirst, wait, once, 
#                                  restart, ctrlaltdel, and shutdown.
#
#       Note: askfirst acts just like respawn, but before running the specified
#       process it displays the line "Please press Enter to activate this
#       console." and then waits for the user to press enter before starting
#       the specified process.
#
#       Note: unrecognised actions (like initdefault) will cause init to emit
#       an error message, and then go along with its business.
#
# <process>: Specifies the process to be executed and it's command line.
#
# Note: BusyBox init works just fine without an inittab. If no inittab is
# found, it has the following default behavior:
#         ::sysinit:/etc/init.d/rcS
#         ::askfirst:/bin/sh
#         ::ctrlaltdel:/sbin/reboot
#         ::shutdown:/sbin/swapoff -a
#         ::shutdown:/bin/umount -a -r
#         ::restart:/sbin/init
#
# if it detects that /dev/console is _not_ a serial console, it will
# also run:
#         tty2::askfirst:/bin/sh
#         tty3::askfirst:/bin/sh
#         tty4::askfirst:/bin/sh
#
# Boot-time system configuration/initialization script.
# This is run first except when booting in single-user mode.
#
#::sysinit:/etc/init.d/rcS

# /bin/sh invocations on selected ttys
#
# Note below that we prefix the shell commands with a "-" to indicate to the
# shell that it is supposed to be a login shell.  Normally this is handled by
# login, but since we are bypassing login in this case, BusyBox lets you do
# this yourself...
#
# Start an "askfirst" shell on the console (whatever that may be)
#::askfirst:-/bin/sh
# Start an "askfirst" shell on /dev/tty2-4
#tty2::askfirst:-/bin/sh
#tty3::askfirst:-/bin/sh
#tty4::askfirst:-/bin/sh

# /sbin/getty invocations for selected ttys
#tty4::respawn:/sbin/getty 38400 tty5
#tty5::respawn:/sbin/getty 38400 tty6

# Put a getty on the serial line (for a terminal)
#::respawn:/sbin/getty -L ttyS 115200 vt100

#::respawn:/sbin/getty -L ttyS1 9600 vt100
#
# Example how to put a getty on a modem line.
#::respawn:/sbin/getty 57600 ttyS2

# Stuff to do when restarting the init process
#::restart:/sbin/init

# Stuff to do before rebooting
#::ctrlaltdel:/sbin/reboot
#::shutdown:/bin/umount -a -r
#::shutdown:/sbin/swapoff -a

