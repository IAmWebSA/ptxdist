# -*-makefile-*-
#
# Copyright (C) 2009 by Jon Ringle <jon@ringle.org>
#
# See CREDITS for details about who has contributed to this project.
#
# For further information about the PTXdist project and license conditions
# see the README file.
#

#
# This file contains global macro and environment definitions for initramfs
#

ifdef PTXCONF_CORE_INITRAMFS
    ifeq ($(PTXCONF_COMPILER_PREFIX),$(PTXCONF_COMPILER_PREFIX_INITRAMFS))
        INITRAMFS_CFLAGS	:= -I$(PTXDIST_SYSROOT_TARGET)/usr/lib/klibc/include
        INITRAMFS_LDFLAGS	:= -L$(PTXDIST_SYSROOT_TARGET)/usr/lib/klibc/lib
        INITRAMFS_ENV_CFLAGS	:= CFLAGS="$(INITRAMFS_CFLAGS)"
        INITRAMFS_ENV_LDFLAGS	:= LDFLAGS="$(INITRAMFS_LDFLAGS)"
        INITRAMFS_ENV_CC := CC=klcc
        INITRAMFS_ENV_LD := LD=klcc
    else
        ifeq ($(wildcard selected_toolchain_initramfs/$(PTXCONF_COMPILER_PREFIX_INITRAMFS)gcc),)
            $(warning *** no 'selected_toolchain_initramfs' link found. Please create a link)
            $(warning *** 'selected_toolchain_initramfs' to the bin directory of your)
            $(warning *** '$(PTXCONF_COMPILER_PREFIX_INITRAMFS)' toolchain)
            $(warning *** '$(PTXCONF_COMPILER_PREFIX)' compiler prefix toolchain)
            $(error )
        endif
        INITRAMFS_TOOLCHAIN_LINK := $(PTXDIST_WORKSPACE)/selected_toolchain_initramfs/
    endif
endif

INITRAMFS_CROSS_COMPILE := $(INITRAMFS_TOOLCHAIN_LINK)$(PTXCONF_COMPILER_PREFIX_INITRAMFS)

#
# prepare the search path when cross compiling
#
INITRAMFS_PATH := $(INITRAMFS_TOOLCHAIN_LINK):$(PTXDIST_SYSROOT_INITRAMFS)/bin:$(PTXDIST_SYSROOT_INITRAMFS)/sbin:$$PATH


# ----------------------------------------------------------------------------
# Environment
# ----------------------------------------------------------------------------

#
# Environment variables for the compiler
#
INITRAMFS_CFLAGS			:= $(PTXCONF_TARGET_EXTRA_CFLAGS)
INITRAMFS_CXXFLAGS			:= $(PTXCONF_TARGET_EXTRA_CXXFLAGS)
INITRAMFS_CPPFLAGS			:= $(strip $(PTXCONF_TARGET_EXTRA_CPPFLAGS) $(PTXDIST_INITRAMFS_CPPFLAGS))
INITRAMFS_LDFLAGS			:= $(strip $(PTXCONF_TARGET_EXTRA_LDFLAGS)  $(PTXDIST_INITRAMFS_LDFLAGS))

ifneq (,$(INITRAMFS_CFLAGS))
INITRAMFS_ENV_CFLAGS		:= CFLAGS="$(INITRAMFS_CFLAGS)"
INITRAMFS_ENV_CFLAGS_FOR_TARGET	:= CFLAGS_FOR_TARGET="$(INITRAMFS_CFLAGS)"
endif

ifneq (,$(INITRAMFS_CXXFLAGS))
INITRAMFS_ENV_CXXFLAGS		:= CXXFLAGS="$(INITRAMFS_CXXFLAGS)"
INITRAMFS_ENV_CXXFLAGS_FOR_TARGET	:= CXXFLAGS_FOR_TARGET="$(INITRAMFS_CXXFLAGS)"
endif

ifneq (,$(INITRAMFS_CPPFLAGS))
INITRAMFS_ENV_CPPFLAGS		:= CPPFLAGS="$(INITRAMFS_CPPFLAGS)"
INITRAMFS_ENV_CPPFLAGS_FOR_TARGET	:= CPPFLAGS_FOR_TARGET="$(INITRAMFS_CPPFLAGS)"
endif

ifneq (,$(INITRAMFS_LDFLAGS))
INITRAMFS_ENV_LDFLAGS		:= LDFLAGS="$(INITRAMFS_LDFLAGS)"
INITRAMFS_ENV_LDFLAGS_FOR_TARGET	:= LDFLAGS_FOR_TARGET="$(INITRAMFS_LDFLAGS)"
endif

INITRAMFS_ENV_FLAGS := \
	$(INITRAMFS_ENV_CFLAGS) \
	$(INITRAMFS_ENV_CPPFLAGS) \
	$(INITRAMFS_ENV_LDFLAGS) \
	$(INITRAMFS_ENV_CXXFLAGS)

INITRAMFS_ENV_FLAGS_FOR_TARGET := \
	$(INITRAMFS_ENV_CFLAGS_FOR_TARGET) \
	$(INITRAMFS_ENV_CXXFLAGS_FOR_TARGET) \
	$(INITRAMFS_ENV_CPPFLAGS_FOR_TARGET) \
	$(INITRAMFS_ENV_LDFLAGS_FOR_TARGET)


#
# Environment variables for toolchain components
#
INITRAMFS_AR		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)ar
INITRAMFS_AS		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)as
INITRAMFS_LD		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)ld
INITRAMFS_NM		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)nm
INITRAMFS_CC		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gcc
INITRAMFS_CXX		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)g++
INITRAMFS_CPP		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)cpp
INITRAMFS_RANLIB		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)ranlib
INITRAMFS_READELF		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)readelf
INITRAMFS_OBJCOPY		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)objcopy
INITRAMFS_OBJDUMP		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)objdump
INITRAMFS_STRIP		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)strip
INITRAMFS_DLLTOOL		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)dlltool
INITRAMFS_GNAT		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnat
INITRAMFS_GNATBIND		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatbind
INITRAMFS_GNATCHOP		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatchop
INITRAMFS_GNATCLEAN		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatclean
INITRAMFS_GNATFIND		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatfind
INITRAMFS_GNATKR		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatkr
INITRAMFS_GNATLINK		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatlink
INITRAMFS_GNATLS		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatls
INITRAMFS_GNATMAKE		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatmake
INITRAMFS_GNATNAME		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatname
INITRAMFS_GNATPREP		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatprep
INITRAMFS_GNATXREF		:= $(PTXCONF_COMPILER_PREFIX_INITRAMFS)gnatxref

INITRAMFS_ENV_AR		:= AR=$(INITRAMFS_AR)
INITRAMFS_ENV_AS		:= AS=$(INITRAMFS_AS)
INITRAMFS_ENV_LD		:= LD=$(INITRAMFS_LD)
INITRAMFS_ENV_NM		:= NM=$(INITRAMFS_NM)
INITRAMFS_ENV_CC		:= CC=$(INITRAMFS_CC)
INITRAMFS_ENV_CXX		:= CXX=$(INITRAMFS_CXX)
INITRAMFS_ENV_CPP		:= CPP=$(INITRAMFS_CPP)
INITRAMFS_ENV_RANLIB	:= RANLIB=$(INITRAMFS_RANLIB)
INITRAMFS_ENV_READELF	:= READELF=$(INITRAMFS_READELF)
INITRAMFS_ENV_OBJCOPY	:= OBJCOPY=$(INITRAMFS_OBJCOPY)
INITRAMFS_ENV_OBJDUMP	:= OBJDUMP=$(INITRAMFS_OBJDUMP)
INITRAMFS_ENV_STRIP		:= STRIP=$(INITRAMFS_STRIP)
INITRAMFS_ENV_DLLTOOL	:= DLLTOOL=$(INITRAMFS_DLLTOOL)
INITRAMFS_ENV_GNAT		:= GNAT=$(INITRAMFS_GNAT)
INITRAMFS_ENV_GNATBIND	:= GNATBIND=$(INITRAMFS_GNATBIND)
INITRAMFS_ENV_GNATCHOP	:= GNATCHOP=$(INITRAMFS_GNATCHOP)
INITRAMFS_ENV_GNATCLEAN	:= GNATCLEAN=$(INITRAMFS_GNATCLEAN)
INITRAMFS_ENV_GNATFIND	:= GNATFIND=$(INITRAMFS_GNATFIND)
INITRAMFS_ENV_GNATKR	:= GNATKR=$(INITRAMFS_GNATKR)
INITRAMFS_ENV_GNATLINK	:= GNATLINK=$(INITRAMFS_GNATLINK)
INITRAMFS_ENV_GNATLS	:= GNATLS=$(INITRAMFS_GNATLS)
INITRAMFS_ENV_GNATMAKE	:= GNATMAKE=$(INITRAMFS_GNATMAKE)
INITRAMFS_ENV_GNATNAME	:= GNATNAME=$(INITRAMFS_GNATNAME)
INITRAMFS_ENV_GNATPREP	:= GNATPREP=$(INITRAMFS_GNATPREP)
INITRAMFS_ENV_GNATXREF	:= GNATXREF=$(INITRAMFS_GNATXREF)
INITRAMFS_ENV_CC_FOR_BUILD	:= CC_FOR_BUILD=$(HOSTCC)
INITRAMFS_ENV_CPP_FOR_BUILD	:= CPP_FOR_BUILD=$(HOSTCC)
INITRAMFS_ENV_LINK_FOR_BUILD:= LINK_FOR_BUILD=$(HOSTCC)



#
# INITRAMFS_ENV is the environment usually set for all configure and compile
# calls in the packet makefiles.
#
# The ac_cv_* variables are needed to tell configure scripts not to use
# AC_TRY_RUN and run cross compiled things on the development host
#
INITRAMFS_ENV_PROGS := \
	$(INITRAMFS_ENV_AR) \
	$(INITRAMFS_ENV_AS) \
	$(INITRAMFS_ENV_LD) \
	$(INITRAMFS_ENV_NM) \
	$(INITRAMFS_ENV_CC) \
	$(INITRAMFS_ENV_CXX) \
	$(INITRAMFS_ENV_CPP) \
	$(INITRAMFS_ENV_RANLIB) \
	$(INITRAMFS_ENV_READELF) \
	$(INITRAMFS_ENV_OBJCOPY) \
	$(INITRAMFS_ENV_OBJDUMP) \
	$(INITRAMFS_ENV_STRIP) \
	$(INITRAMFS_ENV_DLLTOOL) \
	$(INITRAMFS_ENV_GNAT) \
	$(INITRAMFS_ENV_GNATBIND) \
	$(INITRAMFS_ENV_GNATCHOP) \
	$(INITRAMFS_ENV_GNATCLEAN) \
	$(INITRAMFS_ENV_GNATFIND) \
	$(INITRAMFS_ENV_GNATKR) \
	$(INITRAMFS_ENV_GNATLINK) \
	$(INITRAMFS_ENV_GNATLS) \
	$(INITRAMFS_ENV_GNATMAKE) \
	$(INITRAMFS_ENV_GNATNAME) \
	$(INITRAMFS_ENV_GNATPREP) \
	$(INITRAMFS_ENV_GNATXREF) \
	$(INITRAMFS_ENV_CC_FOR_BUILD) \
	$(INITRAMFS_ENV_CPP_FOR_BUILD) \
	$(INITRAMFS_ENV_LINK_FOR_BUILD)

#
# prepare to use pkg-config with wrapper which takes care of
# $(PTXDIST_SYSROOT_TARGET). The wrapper's magic doesn't work when
# pkg-config strips out /usr/lib and other system libs/cflags, so we
# leave them in; the wrapper replaces them by proper
# $(PTXDIST_SYSROOT_TARGET) correspondees.
#
INITRAMFS_ENV_PKG_CONFIG := \
	SYSROOT="$(PTXDIST_SYSROOT_TARGET)" \
	$(PTXDIST_INITRAMFS_ENV_PKG_CONFIG) \
	PKG_CONFIG="$(PTXDIST_SYSROOT_INITRAMFS)/bin/$(COMPILER_PREFIX_INITRAMFS)pkg-config"


#INITRAMFS_ARCH_ENV := KLIBCARCH=$(PTXCONF_ARCH_STRING) \
#	CROSS_COMPILE=$(INITRAMFS_CROSS_COMPILE)

INITRAMFS_ENV_AC := \
	ac_cv_file__dev_random=yes \
	ac_cv_file__proc_self_exe=yes \
	ac_cv_file__proc_self_fd=yes \
	ac_cv_file__proc_self_maps=yes \
	ac_cv_sizeof_long_double=$(PTXCONF_SIZEOF_LONG_DOUBLE) \
	ac_cv_sizeof_long_long=8 \
	ac_cv_sysv_ipc=yes \
	ac_cv_type_uintptr_t=yes \
	bash_cv_func_ctype_nonascii=yes \
	bash_cv_func_sigsetjmp=present \
	bash_cv_func_strcoll_broken=no \
	bash_cv_must_reinstall_sighandlers=no

INITRAMFS_ENV := \
	$(INITRAMFS_ENV_PROGS) \
	$(INITRAMFS_ENV_FLAGS) \
	$(INITRAMFS_ENV_PKG_CONFIG) \
	$(INITRAMFS_ENV_AC)

INITRAMFS_AUTOCONF_SYSROOT_ROOT := \
	--prefix=

INITRAMFS_AUTOCONF_ARCH := \
	--host=$(PTXCONF_GNU_TARGET_INITRAMFS) \
	--build=$(GNU_HOST)

INITRAMFS_AUTOCONF := $(INITRAMFS_AUTOCONF_SYSROOT_ROOT) $(INITRAMFS_AUTOCONF_ARCH)

INITRAMFS_CONTROL := $(STATEDIR)/initramfs_spec

# vim: syntax=make
