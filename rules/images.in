##############################################################################
comment "Image Creation"
##############################################################################

config IMAGE_TGZ
	bool
	default n
	prompt "Generate images/root.tgz"
	help
	  Build a tar.gz archive of the root filesystem, containing the
	  right owner/group and access permissions.

config IMAGE_HD
	bool
	default n
	prompt "Generate images/hd.img"
	help
	  Build a harddisk root image

config IMAGE_HD_CONF
	string
	prompt "Geometry file for hd image"
	depends on IMAGE_HD
	help
	  FIXME

	  Usually your hd geometry file lives in $(PROJECTDIR), so enter
	  something like "$(PROJECTDIR)/your-filename" here. 

config IMAGE_IPKG
	bool
	prompt "Create ipkg packets"
	select HOSTTOOL_IPKG_UTILS
	select HOSTTOOL_IPKG
	help
	  When this option is selected, the install_* macros build 
	  ipkg packets in $(TOPDIR)/images/ for each software component. 

config IMAGE_IPKG_EXTRA_ARGS
	string
	default ""
	prompt "extra arguments passed to ipkg-build"
	depends on IMAGE_IPKG
	help
	  If needed you can add extra arguments for ipkg-build here
	  (e.g. -c if you want ipkg-build to use tar instead of ar.)

config IMAGE_IPKG_ARCH
	string
	default "$(PTXCONF_ARCH)"
	prompt "Name for ipkg field 'Architecture:'"
	depends on IMAGE_IPKG
	help
	  You can specify an architecture name for your ipkg packets here, e.g. 
	  $(PTXCONF_PROJECT). Default is $(PTXCONF_ARCH). Another option would 
	  be to fix this to the PTXdist version you are using; think of 
	  PTXdist being a distro development tool ("Build with ptxdist-0.8.15"). 

config IMAGE_JFFS2
	bool
	default n
	select HOSTTOOL_MTD_MKJFFS2
	select HOSTTOOL_MTD
	prompt "Generate images/root.jffs2"
	help
	  Build a jffs2 image of the root filesystem

config IMAGE_JFFS2_BLOCKSIZE
	int
	default -1
	prompt "Erase Block Size"
	depends on IMAGE_JFFS2

config IMAGE_JFFS2_EXTRA_ARGS
	string
	default ""
	prompt "extra arguments passed to mkfs.jffs2"
	depends on IMAGE_JFFS2
	help
	  If needed you can add extra arguments for mkfs.jffs2 here
	  (e.g. --devtable=$(PROJECTDIR)/device_table.txt)

config IMAGE_UIMAGE
	bool
	default n
	prompt "Generate images/uRamdisk"
	select HOSTTOOL_UMKIMAGE
	select IMAGE_EXT2
	select IMAGE_EXT2_GZIP
	help
	  The file images/uRamdisk can be loaded by the bootloader U-Boot

config IMAGE_UIMAGE_NAME
	string
	default "Application Ramdisk"
	prompt "name of the ramdisk image"
	depends IMAGE_UIMAGE

config IMAGE_UIMAGE_EXTRA_ARGS
	string
	default ""
	prompt "extra arguments passed to umkimage"
	depends on IMAGE_UIMAGE
	help
	  If needed you can add extra arguments for umkimage here
          (e.g. -a 0xaa00000 -e 0xaa00000 )

config IMAGE_EXT2
	bool
	default n
	select HOSTTOOL_GENEXT2FS
	prompt "Generate images/root.ext2 (initrd)"
	help
	  Build an ext2 image of the root filesystem that can be used as an initrd

config IMAGE_EXT2_SIZE
	int
	default -1
	prompt "Size in blocks"
	depends on IMAGE_EXT2

config IMAGE_EXT2_EXTRA_ARGS
	string
	default ""
	prompt "extra arguments passed to genext2fs"
	depends on IMAGE_EXT2
	help
	  If needed you can add extra arguments for genext2fs here
	  (e.g. -U -r 0 -D=$(PROJECTDIR)/device_table.txt)

config IMAGE_EXT2_GZIP
	bool
	default n
	prompt "Compress the image using gzip"
	depends on IMAGE_EXT2

config IMAGE_MKNBI
	bool
	default n
	select HOSTTOOL_MKNBI
	depends on IMAGE_EXT2
	prompt "Generate images/$(PROJECTNAME).{elf|nbi}"
	help
	  Generate an image suitable for netboot

choice
	prompt "Image type"
	default IMAGE_MKNBI_ELF
	depends on IMAGE_MKNBI

config IMAGE_MKNBI_NBI
	bool "nbi"

config IMAGE_MKNBI_ELF
	bool "elf"

endchoice

config IMAGE_MKNBI_EXT_KERNEL
	string
	default "$(PTXCONF_KERNEL_DIR)/arch/i386/boot/bzImage"
	prompt "Path to kernel image"
	depends on IMAGE_MKNBI && USE_EXTERNAL_KERNEL

config IMAGE_MKNBI_APPEND
	string
	default "root=/dev/ram0 ramdisk_size=24000"
	prompt "bootprompt append string"
	depends on IMAGE_MKNBI
	help
	  If needed you can add extra arguments for mkelf-linux here
	  (e.g. root=/dev/ram0)

