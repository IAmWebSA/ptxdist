# CVS client/server

menuconfig CVS
	tristate
	default n
#
# cvs brings its own libz, but the current
# ptxdist patch remove it.
#
	select ZLIB
	select LIBC_CRYPT
	select LIBC_NSL
	prompt "cvs                           "
	help
	  CVS is the Concurrent Versions System. This is a version control system
	  useful for projects using a central repository to hold files and then
	  track all changes made to those files.

if CVS

comment "build options   ---"

config CVS_NDBM
	bool
	default y
	prompt "use built in ndbm"
	help
	  Use the NDBM library distributed with CVS rather than attempting to use a
	  system NDBM library. Note: Disabling this may not work

config CVS_CLIENT
	bool
	default n
	prompt "Build cvs client"
	help
	  Include code for running as a remote client

config CVS_PSSWRD_CLIENT
	bool
	depends on CVS_CLIENT
	default n
	prompt "Support password authenticated client"
	help
	  Enable pserver as a remote access method in the CVS client

config CVS_SERVER
	bool
	default y
	prompt "Build cvs server"
	help
	  Include code for running as a server

config CVS_FLOW_CONTROL
	bool
	depends on CVS_SERVER
	default y
	prompt "Enable server flow control"
	help
	  If you are working with a large remote repository and a 'cvs checkout' is
	  swamping your network and memory, define these to enable flow control. You
	  may optionally pass a low water mark in bytes and a high water mark in
	  bytes, separated by commas. (default is enabled 1M,2M)

config CVS_ENCRYPTION
	bool
	depends on CVS_SERVER
	default n
	prompt "Enable encryption"
	help
	  Enable encryption support

config CVS_ROOTCOMMIT
	bool
	depends on CVS_SERVER
	default n
	prompt "Allow root commits"
	help
	  Allow the root user to commit files

comment "install options   ---"

config CVS_SERVER_POPULATE_CVSROOT
	bool
	depends on CVS_SERVER
	prompt "Populate CVSROOT files"
	default n
	help
	  This will install a list of files into target's cvs repository. These files
	  are supporting files; they do not have to exist for cvs to operate, but they
	  allow you to make cvs operation more flexible.
	  Here is the list of files cvs can run on some events:
	  - commitinfo
	  - cvsignore
	  - cvswrappers
	  - editinfo
	  - history
	  - loginfo
	  - modules
	  - rcsinfo
	  - taginfo
	  and for general configuration:
	  - config
	  - passwd
	  - readers
	  - writers
	  PTXdist will copy these files from the active project from projectroot/cvsroot/
	  into target's file system. Only existing files in projectroot/cvsroot/ will be
	  copied to /srv/cvsroot/CVSROOT/ (or anywhere you locate the repository). To use
	  this feature do not leave "cvs' repository" entry empty!

comment "runtime options   ---"

config CVS_SERVER_REPOSITORY
	string
	depends on CVS_SERVER
	prompt "cvs' repository"
	default "/srv/cvsroot"
	help
	  This will be cvs server's root repository (given to cvs as --allow-root=...).
	  You must give a path here to use the "Populate CVSROOT files" feature.

choice
	prompt "Kind of startup"
	depends on CVS_SERVER

	config CVS_INETD_SERVER
		bool
		prompt "inetd driven"
		help
		 cvs server will be started on demand from inetd. This installs
		 a startup configuration for cvs from inetd. It adds to the
		 /etc/inetd.conf a line like this:
		 cvs stream tcp nowait root /usr/bin/cvs cvsd -f --allow-root=/srv/cvsroot pserver
		 Note: You must enable one of the two possible inet daemons:
		 There is one embedded in busybox and one in packet inetutils.

	config CVS_STARTUP_TYPE_STANDALONE
		bool
		prompt "standalone"
		help
		  This installs cvs startup script /etc/init.d/cvs. With this
		  script the cvs server will be started at system startup and
		  waits for connections

endchoice

config CVS_INETD_STRING
	string
	depends on CVS_SERVER
	depends on CVS_INETD_SERVER
	prompt "inetd service entry"
	default "cvspserver stream tcp nowait root /usr/bin/cvs cvsd -f @ROOT@ pserver"
	help
	  This string is added to inetd's configuration /etc/inetd.conf. @ROOT@
	  in this string will be replaced by repository's root

choice
	prompt "Kind of startup script"
	default ROOTFS_ETC_INITD_CVS_DEFAULT
	depends on CVS_STARTUP_TYPE_STANDALONE

	config ROOTFS_ETC_INITD_CVS_DEFAULT
		bool
		prompt "Use generic"
		help
		  Installs a generic /etc/init.d/cvs startup script.
		  See <ptxdist-install>/generic/etc/init.d/cvs

	config ROOTFS_ETC_INITD_CVS_USER
		bool
		prompt "User defined"
		help
		  This uses a user defined cvs startup script. PTXdist
		  uses files projectroot/etc/init.d/cvs in your local
		  project

endchoice

endif
