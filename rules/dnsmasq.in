#
# dnsmasq configuration
#
menuconfig DNSMASQ
	bool
	prompt "dnsmasq             "
	select DBUS if DNSMASQ_DBUS
	help
	  A small caching DNS proxy and DHCP server.

 	  Dnsmasq is lightweight, easy to configure DNS forwarder
	  and DHCP server. It is designed to provide DNS and,
	  optionally, DHCP, to a small network. It can serve the
	  names of local machines which are not in the global DNS.
	  The DHCP server integrates with the DNS server and allows
	  machines with DHCP-allocated addresses to appear in the DNS
	  with names configured either in each host or in a central
	  configuration file. Dnsmasq supports static and dynamic
 	  DHCP leases and BOOTP for network booting of diskless machines.
	  Note: In order to make dnsmasq work as DHCP, you have to enable
	  the following kernel features: FIXME

comment "build options   ---"
	depends on DNSMASQ

config DNSMASQ_DBUS
	bool
	depends on DNSMASQ
	default n
	prompt "include DBUS support"
	help
	  This enables DBUS support in dnsmasq. This is not only a build
	  option. You also have to enable it at runtime. FIXME: Show how,
	  see DBUS document in dnsmasq packet

comment "runtime options   ---"
	depends on DNSMASQ

choice
	prompt "Kind of startup"
	depends on DNSMASQ

	config DNSMASQ_INETD_SERVER
		bool
		prompt "inetd driven"
		help
		 dnsmasq will be started on demand from inetd. This installs
		 a startup configuration for dnsmasq from inetd. It adds to the
		 /etc/inetd.conf a line like this:
		 domain stream tcp nowait root /sbin/dnsmasq domain
		 Note: You must enable one of the two possible inet daemons:
		 There is one embedded in busybox and one in packet inetutils.
		 Note: If you want to use dnsmasq's DHCP feature, you can't
		 run it from inetd. In this case you need the standalone
		 startscript!

	config DNSMASQ_STARTUP_TYPE_STANDALONE
		bool
		prompt "standalone"
		help
		  This installs dnsmasq startup script /etc/init.d/dnsmasq.
		  With this script the dnsmasq server will be started at system
		  startup and waits for any kind of DHCP or DNS requests.

endchoice

config DNSMASQ_INETD_STRING
	string
	depends on DNSMASQ
	depends on DNSMASQ_INETD_SERVER
	prompt "inetd service entry"
	default "domain stream tcp nowait root /sbin/dnsmasq domain"
	help
	  This string is added to inetd's configuration /etc/inetd.conf.

choice
	prompt "Kind of startup script"
	default ROOTFS_ETC_INITD_DNSMASQ_DEFAULT
	depends on DNSMASQ
	depends on DNSMASQ_STARTUP_TYPE_STANDALONE

	config ROOTFS_ETC_INITD_DNSMASQ_DEFAULT
		bool
		prompt "Use generic"
		help
		  Installs a generic /etc/init.d/dnsmasq startup script.
		  See <ptxdist-install>/generic/etc/init.d/dnsmasq

	config ROOTFS_ETC_INITD_DNSMASQ_USER
		bool
		prompt "User defined"
		help
		  This uses a user defined dnsmasq startup script. PTXdist
		  uses files projectroot/etc/init.d/dnsmasq in your local
		  project

endchoice

choice
	prompt "Configuration's source"
	default DNSMASQ_ETC_DEFAULT
	depends on DNSMASQ

	config DNSMASQ_ETC_DEFAULT
		bool
		prompt "Use generic"
		help
		 The used configuration file for runtime comes from build
		 directory's file "dnsmasq.conf.example"
		 Its mostly useless, but gives you a hint how it works.
		 Use it as a starting point, modify it and store it in your
		 active project. Then switch here to "User defined".

	config DNSMASQ_ETC_USER
		bool
		prompt "User defined"
		help
		  This installs dnsmasq.conf from projectroot/etc/dnsmasq.conf
		  from you local project.

endchoice
