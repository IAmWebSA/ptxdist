# -*-makefile-*-
# $Id: template 6655 2007-01-02 12:55:21Z rsc $
#
# Copyright (C) 2007 by Robert Schwebel
#
# See CREDITS for details about who has contributed to this project.
#
# For further information about the PTXdist project and license conditions
# see the README file.
#

#
# We provide this package
#
PACKAGES-$(PTXCONF_DBUS_GLIB) += dbus-glib

#
# Paths and names
#
DBUS_GLIB_VERSION	:= 0.74
DBUS_GLIB		:= dbus-glib-$(DBUS_GLIB_VERSION)
DBUS_GLIB_SUFFIX	:= tar.gz
DBUS_GLIB_URL		:= bla/$(DBUS_GLIB).$(DBUS_GLIB_SUFFIX)
DBUS_GLIB_SOURCE	:= $(SRCDIR)/$(DBUS_GLIB).$(DBUS_GLIB_SUFFIX)
DBUS_GLIB_DIR		:= $(BUILDDIR)/$(DBUS_GLIB)

# ----------------------------------------------------------------------------
# Get
# ----------------------------------------------------------------------------

dbus-glib_get: $(STATEDIR)/dbus-glib.get

$(STATEDIR)/dbus-glib.get: $(dbus-glib_get_deps_default)
	@$(call targetinfo, $@)
	@$(call touch, $@)

$(DBUS_GLIB_SOURCE):
	@$(call targetinfo, $@)
	@$(call get, DBUS_GLIB)

# ----------------------------------------------------------------------------
# Extract
# ----------------------------------------------------------------------------

dbus-glib_extract: $(STATEDIR)/dbus-glib.extract

$(STATEDIR)/dbus-glib.extract: $(dbus-glib_extract_deps_default)
	@$(call targetinfo, $@)
	@$(call clean, $(DBUS_GLIB_DIR))
	@$(call extract, DBUS_GLIB)
	@$(call patchin, DBUS_GLIB)
	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Prepare
# ----------------------------------------------------------------------------

dbus-glib_prepare: $(STATEDIR)/dbus-glib.prepare

DBUS_GLIB_PATH	:= PATH=$(CROSS_PATH)

DBUS_GLIB_ENV := \
	$(CROSS_ENV) \
	ac_cv_func_posix_getpwnam_r=yes \
	ac_cv_have_abstract_sockets=yes

#
# autoconf
#
DBUS_GLIB_AUTOCONF := \
	$(CROSS_AUTOCONF_USR) \
	--disable-tests \
	--disable-doxygen-docs \
	--disable-gcov \
	--disable-gtk-doc \
	--with-dbus-binding-tool=$(PTXCONF_SYSROOT_HOST)/bin/dbus-binding-tool

#  --with-test-socket-dir=dirname
#                          Where to put sockets for make check
#  --with-introspect-xml=filename
#                          Pass in a pregenerated dbus daemon introspection xml
#                          file (as generated by 'dbus-daemon --introspect') to
#                          use instead of querying the installed dbus daemon

$(STATEDIR)/dbus-glib.prepare: $(dbus-glib_prepare_deps_default)
	@$(call targetinfo, $@)
	@$(call clean, $(DBUS_GLIB_DIR)/config.cache)
	cd $(DBUS_GLIB_DIR) && \
		$(DBUS_GLIB_PATH) $(DBUS_GLIB_ENV) \
		./configure $(DBUS_GLIB_AUTOCONF)
	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Compile
# ----------------------------------------------------------------------------

dbus-glib_compile: $(STATEDIR)/dbus-glib.compile

$(STATEDIR)/dbus-glib.compile: $(dbus-glib_compile_deps_default)
	@$(call targetinfo, $@)
	cd $(DBUS_GLIB_DIR) && $(DBUS_GLIB_PATH) $(MAKE) $(PARALLELMFLAGS)
	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Install
# ----------------------------------------------------------------------------

dbus-glib_install: $(STATEDIR)/dbus-glib.install

$(STATEDIR)/dbus-glib.install: $(dbus-glib_install_deps_default)
	@$(call targetinfo, $@)
	@$(call install, DBUS_GLIB)
	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Target-Install
# ----------------------------------------------------------------------------

dbus-glib_targetinstall: $(STATEDIR)/dbus-glib.targetinstall

$(STATEDIR)/dbus-glib.targetinstall: $(dbus-glib_targetinstall_deps_default)
	@$(call targetinfo, $@)

	@$(call install_init, dbus-glib)
	@$(call install_fixup, dbus-glib,PACKAGE,dbus-glib)
	@$(call install_fixup, dbus-glib,PRIORITY,optional)
	@$(call install_fixup, dbus-glib,VERSION,$(DBUS_GLIB_VERSION))
	@$(call install_fixup, dbus-glib,SECTION,base)
	@$(call install_fixup, dbus-glib,AUTHOR,"Robert Schwebel <r.schwebel\@pengutronix.de>")
	@$(call install_fixup, dbus-glib,DEPENDS,)
	@$(call install_fixup, dbus-glib,DESCRIPTION,missing)

#	@$(call install_copy, dbus-glib, 0, 0, 0755, $(DBUS_GLIB_DIR)/foobar, /dev/null)

	@$(call install_finish, dbus-glib)

	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Clean
# ----------------------------------------------------------------------------

dbus-glib_clean:
	rm -rf $(STATEDIR)/dbus-glib.*
	rm -rf $(IMAGEDIR)/dbus-glib_*
	rm -rf $(DBUS_GLIB_DIR)

# vim: syntax=make
