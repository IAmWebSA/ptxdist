# -*-makefile-*-
# $Id$
#
# Copyright (C) @YEAR@ by @AUTHOR@
#
# See CREDITS for details about who has contributed to this project.
#
# For further information about the PTXdist project and license conditions
# see the README file.
#

#
# We provide this package
#
PACKAGES-$(PTXCONF_@PACKET@) += @packet@

#
# Paths and names
#
@PACKET@		= @packet@
@PACKET@_URL		= @URL@/$(@PACKET@)
@PACKET@_SOURCE		= $(SRCDIR)/$(@PACKET@)
@PACKET@_DIR		= $(BUILDDIR)/$(@PACKET@)

-include $(call package_depfile)

# ----------------------------------------------------------------------------
# Get
# ----------------------------------------------------------------------------

@packet@_get: $(STATEDIR)/@packet@.get

$(STATEDIR)/@packet@.get: $(@packet@_get_deps_default)
	@$(call targetinfo, $@)
	@$(call touch, $@)

$(@PACKET@_SOURCE):
	@$(call targetinfo, $@)
	@$(call get, @PACKET@)

# ----------------------------------------------------------------------------
# Extract
# ----------------------------------------------------------------------------

@packet@_extract: $(STATEDIR)/@packet@.extract

$(STATEDIR)/@packet@.extract: $(@packet@_extract_deps_default)
	@$(call targetinfo, $@)
	@$(call clean, $(@PACKET@_DIR))
	@$(call extract, @PACKET@)
	@$(call patchin, @PACKET@)
	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Prepare
# ----------------------------------------------------------------------------

@packet@_prepare: $(STATEDIR)/@packet@.prepare

@PACKET@_PATH	=  PATH=$(CROSS_PATH)
@PACKET@_ENV 	=  $(CROSS_ENV)

$(STATEDIR)/@packet@.prepare: $(@packet@_prepare_deps_default)
	@$(call targetinfo, $@)
	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Compile
# ----------------------------------------------------------------------------

@packet@_compile: $(STATEDIR)/@packet@.compile

$(STATEDIR)/@packet@.compile: $(@packet@_compile_deps_default)
	@$(call targetinfo, $@)
	cd $(@PACKET@_DIR) && $(@PACKET@_ENV) $(@PACKET@_PATH) make
	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Install
# ----------------------------------------------------------------------------

@packet@_install: $(STATEDIR)/@packet@.install

$(STATEDIR)/@packet@.install: $(@packet@_install_deps_default)
	@$(call targetinfo, $@)
	@$(call install, @PACKET@)
	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Target-Install
# ----------------------------------------------------------------------------

@packet@_targetinstall: $(STATEDIR)/@packet@.targetinstall

$(STATEDIR)/@packet@.targetinstall: $(@packet@_targetinstall_deps_default)
	@$(call targetinfo, $@)

	@$(call install_init, @packet@)
	@$(call install_fixup,@packet@,PACKAGE,@packet@)
	@$(call install_fixup,@packet@,PRIORITY,optional)
	@$(call install_fixup,@packet@,VERSION,0)
	@$(call install_fixup,@packet@,SECTION,base)
	@$(call install_fixup,@packet@,AUTHOR,"@AUTHOR@")
	@$(call install_fixup,@packet@,DEPENDS,)
	@$(call install_fixup,@packet@,DESCRIPTION,missing)
#
# TODO: Add here all files that should be copied to the target
# Note: Add everything before(!) call to macro install_finish
#
	@$(call install_copy, @packet@, 0, 0, 0755, $(@PACKET@_DIR)/foobar, /dev/null)

	@$(call install_finish,@packet@)

	@$(call touch, $@)

# ----------------------------------------------------------------------------
# Clean
# ----------------------------------------------------------------------------

@packet@_clean:
	rm -rf $(STATEDIR)/@packet@.*
	cd $(@PACKET@_DIR) && $(@PACKET@_ENV) $(@PACKET@_PATH) make clean

# vim: syntax=make
