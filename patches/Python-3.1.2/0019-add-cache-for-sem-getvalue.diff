From: Michael Olbrich <m.olbrich@pengutronix.de>
Subject: add cache variable for sem_getvalue test

AC_TRY_RUN is used to check for a broken sem_getvalue.
This patch adds a cache variable (ac_cv_broken_sem_getvalue)
that can be set when cross-compiling.

Signed-off-by: Michael Olbrich <m.olbrich@pengutronix.de>
---
 configure.in |   13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

Index: b/configure.in
===================================================================
--- a/configure.in
+++ b/configure.in
@@ -3376,7 +3376,8 @@ fi
 
 # Multiprocessing check for broken sem_getvalue
 AC_MSG_CHECKING(for broken sem_getvalue)
-AC_TRY_RUN([
+AC_CACHE_VAL(ac_cv_broken_sem_getvalue,
+[AC_TRY_RUN([
 #include <unistd.h>
 #include <fcntl.h>
 #include <stdio.h>
@@ -3398,10 +3399,14 @@ int main(void){
   return res==-1 ? 1 : 0;
 }
 ]
-,AC_MSG_RESULT(no),
- AC_MSG_RESULT(yes)
+,ac_cv_broken_sem_getvalue=no,
+ ac_cv_broken_sem_getvalue=yes,
+ ac_cv_broken_sem_getvalue=yes)
+])
+AC_MSG_RESULT($ac_cv_broken_sem_getvalue)
+if test "x$ac_cv_broken_sem_getvalue" = "xyes"; then
   AC_DEFINE(HAVE_BROKEN_SEM_GETVALUE, 1, define to 1 if your sem_getvalue is broken.)
-)
+fi
 
 # determine what size digit to use for Python's longs
 AC_MSG_CHECKING([digit size for Python's longs])
