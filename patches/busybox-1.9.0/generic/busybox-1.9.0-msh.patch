Subject: busybox 1.9.0 fixes
From: http://busybox.net/downloads/fixes-1.9.0

---
 include/libbb.h  |    5 ++---
 libbb/lineedit.c |    4 ++--
 shell/msh.c      |   17 +++++++++++------
 3 files changed, 15 insertions(+), 11 deletions(-)

Index: busybox-1.9.0/include/libbb.h
===================================================================
--- busybox-1.9.0.orig/include/libbb.h
+++ busybox-1.9.0/include/libbb.h
@@ -953,10 +953,9 @@ enum {
 };
 line_input_t *new_line_input_t(int flags);
 /* Returns:
- * -1 on read errors or EOF, or on bare Ctrl-D.
- * 0  on ctrl-C,
+ * -1 on read errors or EOF, or on bare Ctrl-D,
+ * 0  on ctrl-C (the line entered is still returned in 'command'),
  * >0 length of input string, including terminating '\n'
- * [is this true? stores "" in 'command' if return value is 0 or -1]
  */
 int read_line_input(const char* prompt, char* command, int maxsize, line_input_t *state);
 #else
Index: busybox-1.9.0/libbb/lineedit.c
===================================================================
--- busybox-1.9.0.orig/libbb/lineedit.c
+++ busybox-1.9.0/libbb/lineedit.c
@@ -1315,8 +1315,8 @@ static void win_changed(int nsig)
 #define CTRL(a) ((a) & ~0x40)
 
 /* Returns:
- * -1 on read errors or EOF, or on bare Ctrl-D.
- * 0  on ctrl-C,
+ * -1 on read errors or EOF, or on bare Ctrl-D,
+ * 0  on ctrl-C (the line entered is still returned in 'command'),
  * >0 length of input string, including terminating '\n'
  */
 int read_line_input(const char *prompt, char *command, int maxsize, line_input_t *st)
Index: busybox-1.9.0/shell/msh.c
===================================================================
--- busybox-1.9.0.orig/shell/msh.c
+++ busybox-1.9.0/shell/msh.c
@@ -2825,11 +2825,13 @@ static int forkexec(struct op *t, int *p
 
 	if (pin != NULL) {
 		xmove_fd(pin[0], 0);
-		if (pin[1] != 0) close(pin[1]);
+		if (pin[1] != 0)
+			close(pin[1]);
 	}
 	if (pout != NULL) {
 		xmove_fd(pout[1], 1);
-		if (pout[1] != 1) close(pout[0]);
+		if (pout[1] != 1)
+			close(pout[0]);
 	}
 
 	iopp = t->ioact;
@@ -4162,7 +4164,7 @@ static int grave(int quoted)
 		return 0;
 	}
 	if (i != 0) {
-		waitpid(i, NULL, 0);
+		waitpid(i, NULL, 0); // safe_waitpid?
 		global_env.iop->argp->aword = ++cp;
 		close(pf[1]);
 		PUSHIO(afile, remap(pf[0]),
@@ -4181,7 +4183,8 @@ static int grave(int quoted)
 	 *  echo "$files" >zz
 	 */
 	xmove_fd(pf[1], 1);
-	if (pf[0] != 1) close(pf[0]);
+	if (pf[0] != 1)
+		close(pf[0]);
 
 	argument_list[0] = (char *) DEFAULT_SHELL;
 	argument_list[1] = (char *) "-c";
@@ -4834,9 +4837,11 @@ static int filechar(struct ioarg *ap)
 		static int position = 0, size = 0;
 
 		while (size == 0 || position >= size) {
-			read_line_input(current_prompt, filechar_cmdbuf, BUFSIZ, line_input_state);
-			size = strlen(filechar_cmdbuf);
+			size = read_line_input(current_prompt, filechar_cmdbuf, BUFSIZ, line_input_state);
+			if (size < 0) /* Error/EOF */
+				exit(0);
 			position = 0;
+			/* if Ctrl-C, size == 0 and loop will repeat */
 		}
 		c = filechar_cmdbuf[position];
 		position++;
