From dc2ebb53bd52743bc643462c7ebe3fa8488c9a13 Mon Sep 17 00:00:00 2001
From: Marc Kleine-Budde <mkl@pengutronix.de>
Date: Fri, 6 Nov 2009 09:26:56 +0100
Subject: [PATCH 2/2] silence errors on BE platforms

Silence this warning, which crashes when CONFIG_WERROR is active:

cc1: warnings being treated as errors
util-linux/mkfs_vfat.c: In function 'mkfs_vfat_main':
util-linux/mkfs_vfat.c:468: error: large integer implicitly truncated to unsigned type

Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
---
 util-linux/mkfs_ext2.c   |    6 +++---
 util-linux/mkfs_reiser.c |    6 +++---
 util-linux/mkfs_vfat.c   |    6 +++---
 3 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/util-linux/mkfs_ext2.c b/util-linux/mkfs_ext2.c
index 19c3c67..27abb00 100644
--- a/util-linux/mkfs_ext2.c
+++ b/util-linux/mkfs_ext2.c
@@ -29,11 +29,11 @@ char BUG_wrong_field_size(void);
 #define STORE_LE(field, value) \
 do { \
 	if (sizeof(field) == 4) \
-		field = cpu_to_le32(value); \
+		field = (typeof(field))cpu_to_le32(value); \
 	else if (sizeof(field) == 2) \
-		field = cpu_to_le16(value); \
+		field = (typeof(field))cpu_to_le16(value); \
 	else if (sizeof(field) == 1) \
-		field = (value); \
+		field = (typeof(field))(value); \
 	else \
 		BUG_wrong_field_size(); \
 } while (0)
diff --git a/util-linux/mkfs_reiser.c b/util-linux/mkfs_reiser.c
index 7f37eb8..084a611 100644
--- a/util-linux/mkfs_reiser.c
+++ b/util-linux/mkfs_reiser.c
@@ -14,11 +14,11 @@ char BUG_wrong_field_size(void);
 #define STORE_LE(field, value) \
 do { \
 	if (sizeof(field) == 4) \
-		field = cpu_to_le32(value); \
+		field = (typeof(field))cpu_to_le32(value); \
 	else if (sizeof(field) == 2) \
-		field = cpu_to_le16(value); \
+		field = (typeof(field))cpu_to_le16(value); \
 	else if (sizeof(field) == 1) \
-		field = (value); \
+		field = (typeof(field))(value); \
 	else \
 		BUG_wrong_field_size(); \
 } while (0)
diff --git a/util-linux/mkfs_vfat.c b/util-linux/mkfs_vfat.c
index a9a65aa..51c5b78 100644
--- a/util-linux/mkfs_vfat.c
+++ b/util-linux/mkfs_vfat.c
@@ -174,11 +174,11 @@ void BUG_unsupported_field_size(void);
 #define STORE_LE(field, value) \
 do { \
 	if (sizeof(field) == 4) \
-		field = cpu_to_le32(value); \
+		field = (typeof(field))cpu_to_le32(value);	\
 	else if (sizeof(field) == 2) \
-		field = cpu_to_le16(value); \
+		field = (typeof(field))cpu_to_le16(value); \
 	else if (sizeof(field) == 1) \
-		field = (value); \
+		field = (typeof(field))(value); \
 	else \
 		BUG_unsupported_field_size(); \
 } while (0)
-- 
1.7.0.3

