Index: rxtx-2.1-7r2/configure
===================================================================
--- rxtx-2.1-7r2.orig/configure	2009-06-10 23:50:27.000000000 +0200
+++ rxtx-2.1-7r2/configure	2009-06-10 23:51:09.000000000 +0200
@@ -7062,7 +7062,7 @@
 
 	if test $supports_anon_versioning = yes; then
 	  archive_expsym_cmds='$echo "{ global:" > $output_objdir/$libname.ver~
-  cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+  cat $export_symbols | sed -e "s/\(.*\)/'"$ac_symprfx"'\1;/" >> $output_objdir/$libname.ver~
   $echo "local: *; };" >> $output_objdir/$libname.ver~
 	  $CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
 	fi
@@ -7883,7 +7883,7 @@
   sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
 fi
 need_lib_prefix=unknown
-hardcode_into_libs=no
+hardcode_into_libs="no"
 
 # when you set need_version to no, make sure it does not cause -set_version
 # flags to be left without arguments
@@ -9705,16 +9705,16 @@
 hardcode_action=$hardcode_action
 
 # Whether we should hardcode library paths into libraries.
-hardcode_into_libs=$hardcode_into_libs
+hardcode_into_libs="no"
 
 # Flag to hardcode \$libdir into a binary during linking.
 # This must work even if \$libdir does not exist.
-hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec
+hardcode_libdir_flag_spec=""
 
 # If ld is used when linking, flag to hardcode \$libdir into
 # a binary during linking. This must work even if \$libdir does
 # not exist.
-hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld
+hardcode_libdir_flag_spec_ld=""
 
 # Whether we need a single -rpath flag with a separated argument.
 hardcode_libdir_separator=$lt_hardcode_libdir_separator
@@ -11684,7 +11684,7 @@
   sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
 fi
 need_lib_prefix=unknown
-hardcode_into_libs=no
+hardcode_into_libs="no"
 
 # when you set need_version to no, make sure it does not cause -set_version
 # flags to be left without arguments
@@ -13421,16 +13421,16 @@
 hardcode_action=$hardcode_action_CXX
 
 # Whether we should hardcode library paths into libraries.
-hardcode_into_libs=$hardcode_into_libs
+hardcode_into_libs="no"
 
 # Flag to hardcode \$libdir into a binary during linking.
 # This must work even if \$libdir does not exist.
-hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_CXX
+hardcode_libdir_flag_spec=""
 
 # If ld is used when linking, flag to hardcode \$libdir into
 # a binary during linking. This must work even if \$libdir does
 # not exist.
-hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_CXX
+hardcode_libdir_flag_spec_ld=""
 
 # Whether we need a single -rpath flag with a separated argument.
 hardcode_libdir_separator=$lt_hardcode_libdir_separator_CXX
@@ -14168,7 +14168,7 @@
 
 	if test $supports_anon_versioning = yes; then
 	  archive_expsym_cmds_F77='$echo "{ global:" > $output_objdir/$libname.ver~
-  cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+  cat $export_symbols | sed -e "s/\(.*\)/'"$ac_symprfx"'\1;/" >> $output_objdir/$libname.ver~
   $echo "local: *; };" >> $output_objdir/$libname.ver~
 	  $CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
 	fi
@@ -14969,7 +14969,7 @@
   sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
 fi
 need_lib_prefix=unknown
-hardcode_into_libs=no
+hardcode_into_libs="no"
 
 # when you set need_version to no, make sure it does not cause -set_version
 # flags to be left without arguments
@@ -15906,16 +15906,16 @@
 hardcode_action=$hardcode_action_F77
 
 # Whether we should hardcode library paths into libraries.
-hardcode_into_libs=$hardcode_into_libs
+hardcode_into_libs="no"
 
 # Flag to hardcode \$libdir into a binary during linking.
 # This must work even if \$libdir does not exist.
-hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_F77
+hardcode_libdir_flag_spec=""
 
 # If ld is used when linking, flag to hardcode \$libdir into
 # a binary during linking. This must work even if \$libdir does
 # not exist.
-hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_F77
+hardcode_libdir_flag_spec_ld=""
 
 # Whether we need a single -rpath flag with a separated argument.
 hardcode_libdir_separator=$lt_hardcode_libdir_separator_F77
@@ -16642,7 +16642,7 @@
 
 	if test $supports_anon_versioning = yes; then
 	  archive_expsym_cmds_GCJ='$echo "{ global:" > $output_objdir/$libname.ver~
-  cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+  cat $export_symbols | sed -e "s/\(.*\)/'"$ac_symprfx"'\1;/" >> $output_objdir/$libname.ver~
   $echo "local: *; };" >> $output_objdir/$libname.ver~
 	  $CC -shared'"$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
 	fi
@@ -17463,7 +17463,7 @@
   sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
 fi
 need_lib_prefix=unknown
-hardcode_into_libs=no
+hardcode_into_libs="no"
 
 # when you set need_version to no, make sure it does not cause -set_version
 # flags to be left without arguments
@@ -19200,16 +19200,16 @@
 hardcode_action=$hardcode_action_GCJ
 
 # Whether we should hardcode library paths into libraries.
-hardcode_into_libs=$hardcode_into_libs
+hardcode_into_libs="no"
 
 # Flag to hardcode \$libdir into a binary during linking.
 # This must work even if \$libdir does not exist.
-hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_GCJ
+hardcode_libdir_flag_spec=""
 
 # If ld is used when linking, flag to hardcode \$libdir into
 # a binary during linking. This must work even if \$libdir does
 # not exist.
-hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_GCJ
+hardcode_libdir_flag_spec_ld=""
 
 # Whether we need a single -rpath flag with a separated argument.
 hardcode_libdir_separator=$lt_hardcode_libdir_separator_GCJ
@@ -19674,16 +19674,16 @@
 hardcode_action=$hardcode_action_RC
 
 # Whether we should hardcode library paths into libraries.
-hardcode_into_libs=$hardcode_into_libs
+hardcode_into_libs="no"
 
 # Flag to hardcode \$libdir into a binary during linking.
 # This must work even if \$libdir does not exist.
-hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec_RC
+hardcode_libdir_flag_spec=""
 
 # If ld is used when linking, flag to hardcode \$libdir into
 # a binary during linking. This must work even if \$libdir does
 # not exist.
-hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld_RC
+hardcode_libdir_flag_spec_ld=""
 
 # Whether we need a single -rpath flag with a separated argument.
 hardcode_libdir_separator=$lt_hardcode_libdir_separator_RC
@@ -21966,7 +21966,6 @@
 
 
 JHOME=
-RXTX_PATH=
 EXTENSION="c"
 OBJECT_EXTENSION="lo"
 LIB_EXTENSION="la"
@@ -22404,13 +22403,13 @@
 		fi
 	;;
 	esac
-
 	# Cross Compilers
 		#echo ----------------------------
 		#echo $target_os
 		#echo ----------------------------
 	case $target_os in
 	linux*)
+		RXTX_PATH=$CROSS_RXTX_PATH
 	;;
 	beos*)
 		TARGETLIB="\$(target_triplet)/librxtxSerial.la"
