From a07e9912539d4ec26c954a9b03f04af987df6246 Mon Sep 17 00:00:00 2001
From: Sascha Hlusiak <mail@saschahlusiak.de>
Date: Mon, 4 May 2009 01:44:47 +0200
Subject: [PATCH 20/23] iproute2: ISATAP potential router list

--Boundary-01=_wxi/JRaNdLkbr7g
Content-Type: text/plain;
  charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

Hi Stephen,

please review attached patch to add support for in-kernel potential router=
=20
lists for ISATAP tunnels.

Usage:
ip tunnel add name isatap0 mode isatap local 192.168.1.100
ip tunnel prl dev isatap0 prl-default 192.168.1.1
ip tunnel prl dev isatap0 prl-nodefault 192.168.1.2
ip tunnel prl dev isatap0 prl-delete 192.168.1.1
ip tunnel show # pr and pdr will be listed as well

Patch based on http://osprey67.com/seal/iproute2_diff.v0_3.txt by Fred L.=20
Templin.

Thanks,
Sascha
---
 ip/iptunnel.c |   74 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 ip/tunnel.c   |   16 ++++++++++++
 ip/tunnel.h   |    1 +
 man/man8/ip.8 |   24 +++++++++++++++++-
 4 files changed, 113 insertions(+), 2 deletions(-)

diff --git a/ip/iptunnel.c b/ip/iptunnel.c
index 7bee162..338d8bd 100644
--- a/ip/iptunnel.c
+++ b/ip/iptunnel.c
@@ -38,9 +38,10 @@ static void usage(void) __attribute__((noreturn));
 
 static void usage(void)
 {
-	fprintf(stderr, "Usage: ip tunnel { add | change | del | show } [ NAME ]\n");
+	fprintf(stderr, "Usage: ip tunnel { add | change | del | show | prl } [ NAME ]\n");
 	fprintf(stderr, "          [ mode { ipip | gre | sit | isatap } ] [ remote ADDR ] [ local ADDR ]\n");
 	fprintf(stderr, "          [ [i|o]seq ] [ [i|o]key KEY ] [ [i|o]csum ]\n");
+	fprintf(stderr, "          [ prl-default ADDR ] [ prl-nodefault ADDR ] [ prl-delete ADDR ]\n");
 	fprintf(stderr, "          [ ttl TTL ] [ tos TOS ] [ [no]pmtudisc ] [ dev PHYS_DEV ]\n");
 	fprintf(stderr, "\n");
 	fprintf(stderr, "Where: NAME := STRING\n");
@@ -324,6 +325,25 @@ static void print_tunnel(struct ip_tunnel_parm *p)
 	       p->iph.daddr ? format_host(AF_INET, 4, &p->iph.daddr, s1, sizeof(s1))  : "any",
 	       p->iph.saddr ? rt_addr_n2a(AF_INET, 4, &p->iph.saddr, s2, sizeof(s2)) : "any");
 
+	if (p->i_flags & SIT_ISATAP) {
+		struct ip_tunnel_prl prl[16];
+		int i;
+		
+		memset(prl, 0, sizeof(prl));
+		prl[0].datalen = sizeof(prl) - sizeof(prl[0]);
+		prl[0].addr = htonl(INADDR_ANY);
+	
+		if (!tnl_prl_ioctl(SIOCGETPRL, p->name, prl))
+			for (i = 1; i < sizeof(prl) / sizeof(prl[0]); i++)
+		{
+			if (prl[i].addr != htonl(INADDR_ANY)) {
+				printf(" %s %s ", 
+					(prl[i].flags & PRL_DEFAULT) ? "pdr" : "pr",
+					format_host(AF_INET, 4, &prl[i].addr, s1, sizeof(s1)));
+			}
+		}
+	}
+
 	if (p->link) {
 		char *n = tnl_ioctl_get_ifname(p->link);
 		if (n)
@@ -464,6 +484,56 @@ static int do_show(int argc, char **argv)
 	return 0;
 }
 
+static int do_prl(int argc, char **argv)
+{
+	struct ip_tunnel_prl p;
+	int count = 0;
+	int devname = 0;
+	int cmd = 0;
+	char medium[IFNAMSIZ];
+
+	memset(&p, 0, sizeof(p));
+	memset(&medium, 0, sizeof(medium));
+
+	while (argc > 0) {
+		if (strcmp(*argv, "prl-default") == 0) {
+			NEXT_ARG();
+			cmd = SIOCADDPRL;
+			p.addr = get_addr32(*argv);
+			p.flags |= PRL_DEFAULT;
+			count++;
+		} else if (strcmp(*argv, "prl-nodefault") == 0) {
+			NEXT_ARG();
+			cmd = SIOCADDPRL;
+			p.addr = get_addr32(*argv);
+			count++;
+		} else if (strcmp(*argv, "prl-delete") == 0) {
+			NEXT_ARG();
+			cmd = SIOCDELPRL;
+			p.addr = get_addr32(*argv);
+			count++;
+		} else if (strcmp(*argv, "dev") == 0) {
+			NEXT_ARG();
+			strncpy(medium, *argv, IFNAMSIZ-1);
+			devname++;
+		} else {
+			fprintf(stderr,"%s: Invalid PRL parameter.\n", *argv);
+			exit(-1);
+		}
+		if (count > 1) {
+			fprintf(stderr,"One PRL entry at a time.\n");
+			exit(-1);
+		}
+		argc--; argv++;
+	}
+	if (devname == 0) {
+		fprintf(stderr, "Must specify dev.\n");
+		exit(-1);
+	}
+
+	return tnl_prl_ioctl(cmd, medium, &p);
+}
+
 int do_iptunnel(int argc, char **argv)
 {
 	switch (preferred_family) {
@@ -495,6 +565,8 @@ int do_iptunnel(int argc, char **argv)
 		    matches(*argv, "lst") == 0 ||
 		    matches(*argv, "list") == 0)
 			return do_show(argc-1, argv+1);
+		if (matches(*argv, "prl") == 0)
+			return do_prl(argc-1, argv+1);
 		if (matches(*argv, "help") == 0)
 			usage();
 	} else
diff --git a/ip/tunnel.c b/ip/tunnel.c
index 104340d..d1296e6 100644
--- a/ip/tunnel.c
+++ b/ip/tunnel.c
@@ -167,3 +167,19 @@ int tnl_del_ioctl(const char *basedev, const char *name, void *p)
 	close(fd);
 	return err;
 }
+
+int tnl_prl_ioctl(int cmd, const char *name, void *p)
+{
+	struct ifreq ifr;
+	int fd;
+	int err;
+
+	strncpy(ifr.ifr_name, name, IFNAMSIZ);
+	ifr.ifr_ifru.ifru_data = p;
+	fd = socket(preferred_family, SOCK_DGRAM, 0);
+	err = ioctl(fd, cmd, &ifr);
+	if (err)
+		perror("ioctl");
+	close(fd);
+	return err;
+}
diff --git a/ip/tunnel.h b/ip/tunnel.h
index 1b58834..0661e27 100644
--- a/ip/tunnel.h
+++ b/ip/tunnel.h
@@ -31,5 +31,6 @@ char * tnl_ioctl_get_ifname(int idx);
 int tnl_get_ioctl(const char *basedev, void *p);
 int tnl_add_ioctl(int cmd, const char *basedev, const char *name, void *p);
 int tnl_del_ioctl(const char *basedev, const char *name, void *p);
+int tnl_prl_ioctl(int cmd, const char *name, void *p);
 
 #endif
diff --git a/man/man8/ip.8 b/man/man8/ip.8
index e948d03..e12008c 100644
--- a/man/man8/ip.8
+++ b/man/man8/ip.8
@@ -278,7 +278,7 @@ throw " | " unreachable " | " prohibit " | " blackhole " | " nat " ]"
 .IR STATE " ]"
 
 .ti -8
-.BR "ip tunnel" " { " add " | " change " | " del " | " show " }"
+.BR "ip tunnel" " { " add " | " change " | " del " | " show " | " prl " }"
 .RI "[ " NAME " ]"
 .br
 .RB "[ " mode
@@ -302,6 +302,13 @@ throw " | " unreachable " | " prohibit " | " blackhole " | " nat " ]"
 .B flowlabel
 .IR FLOWLABEL " ]"
 .br
+.RB "[ " prl-default
+.IR ADDR " ] [ "
+.B prl-nodefault
+.IR ADDR " ] [ "
+.B prl-delete
+.IR ADDR " ]"
+.br
 .RB "[ [" no "]" pmtudisc " ]"
 .RB "[ " dev
 .IR PHYS_DEV " ]"
@@ -2178,6 +2185,21 @@ set a fixed encapsulation limit.  Default is 4.
 .RB ( " only IPv6 tunnels " )
 set a fixed flowlabel.
 
+.SS ip tunnel prl - potential router list (ISATAP only)
+
+.TP
+.BI dev " NAME"
+mandatory device name.
+
+.TP
+.BI prl-default " ADDR"
+.TP
+.BI prl-nodefault " ADDR"
+.TP
+.BI prl-delete " ADDR"
+.RB "Add or delete " ADDR
+as a potential router or default router.
+
 .SS ip tunnel show - list tunnels
 This command has no arguments.
 
-- 
1.6.3.3

