From fb26772ce5a02cc2e677925ce62a459947a4709e Mon Sep 17 00:00:00 2001
From: Bruno Thomsen <bth@kamstrup.dk>
Date: Thu, 25 Sep 2014 15:41:58 +0200
Subject: [PATCH] bash-3.2: patch 49

Bash-Release: 3.2
Patch-ID: bash32-049

Bug-Reported-by:	Len Lattanzi <llattanzi@apple.com>
Bug-Reference-ID:	<52B1297F-6675-45CC-B63E-24745337D006@apple.com>
Bug-Reference-URL:

Bug-Description:

On systems where mbrtowc() returns -2 when passed a length argument with
value 0, when using a multibyte locale, Readline's emacs-mode forward-char
at the end of a line will leave the point beyond the end of the line.

Signed-off-by: Bruno Thomsen <bth@kamstrup.dk>
---
 lib/readline/mbutil.c | 9 ++++++---
 patchlevel.h          | 2 +-
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/lib/readline/mbutil.c b/lib/readline/mbutil.c
index 17dde53..0f8191c 100644
--- a/lib/readline/mbutil.c
+++ b/lib/readline/mbutil.c
@@ -77,7 +77,7 @@ _rl_find_next_mbchar_internal (string, seed, count, find_non_zero)
      char *string;
      int seed, count, find_non_zero;
 {
-  size_t tmp;
+  size_t tmp, len;
   mbstate_t ps;
   int point;
   wchar_t wc;
@@ -96,9 +96,12 @@ _rl_find_next_mbchar_internal (string, seed, count, find_non_zero)
   if (seed < point)
     count--;
 
-  while (count > 0)  
+  while (count > 0)
     {
-      tmp = mbrtowc (&wc, string+point, strlen(string + point), &ps);
+      len = strlen (string + point);
+      if (len == 0)
+        break;
+      tmp = mbrtowc (&wc, string+point, len, &ps);
       if (MB_INVALIDCH ((size_t)tmp))
 	{
 	  /* invalid bytes. asume a byte represents a character */
diff --git a/patchlevel.h b/patchlevel.h
index aff99d9..19e5eca 100644
--- a/patchlevel.h
+++ b/patchlevel.h
@@ -25,6 +25,6 @@
    regexp `^#define[ 	]*PATCHLEVEL', since that's what support/mkversion.sh
    looks for to find the patch level (for the sccs version string). */
 
-#define PATCHLEVEL 48
+#define PATCHLEVEL 49
 
 #endif /* _PATCHLEVEL_H_ */
-- 
1.9.1

