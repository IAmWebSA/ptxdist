From: Sascha Hauer <s.hauer@pengutronix.de>
Date: Mon, 1 Dec 2014 15:23:21 +0100
Subject: [PATCH] evmctl: read inode number from user.image-inode-number xattr

mkfs.ubifs puts the inode numbers it uses during image generation
in the extended attribute user.image-inode-number. Read the inode
numbers back from this attribute in evmctl.

Signed-off-by: Sascha Hauer <s.hauer@pengutronix.de>
---
 src/evmctl.c    | 14 +++++++++++---
 src/libimaevm.c | 20 ++++++++++++++++++++
 2 files changed, 31 insertions(+), 3 deletions(-)

diff --git a/src/evmctl.c b/src/evmctl.c
index 109b82ae102e..049b2e5ecf40 100644
--- a/src/evmctl.c
+++ b/src/evmctl.c
@@ -312,6 +312,8 @@ static int calc_evm_hash(const char *file, unsigned char *hash)
 	char uuid[16];
 	struct h_misc_64 hmac_misc;
 	int hmac_size;
+	char buf[128] = {};
+	ino_t ino;
 
 	if (lstat(file, &st)) {
 		log_err("Failed to stat: %s\n", file);
@@ -368,13 +370,19 @@ static int calc_evm_hash(const char *file, unsigned char *hash)
 		}
 	}
 
+	err = lgetxattr(file, "user.image-inode-number", buf, sizeof(buf) - 1);
+	if (err > 0)
+		ino = strtoull(buf, NULL, 10);
+	else
+		ino = st.st_ino;
+
 	memset(&hmac_misc, 0, sizeof(hmac_misc));
 
 	if (msize == 0) {
 		struct h_misc *hmac = (struct h_misc *)&hmac_misc;
 
 		hmac_size = sizeof(*hmac);
-		hmac->ino = st.st_ino;
+		hmac->ino = ino;
 		hmac->generation = generation;
 		hmac->uid = st.st_uid;
 		hmac->gid = st.st_gid;
@@ -383,7 +391,7 @@ static int calc_evm_hash(const char *file, unsigned char *hash)
 		struct h_misc_64 *hmac = (struct h_misc_64 *)&hmac_misc;
 
 		hmac_size = sizeof(*hmac);
-		hmac->ino = st.st_ino;
+		hmac->ino = ino;
 		hmac->generation = generation;
 		hmac->uid = st.st_uid;
 		hmac->gid = st.st_gid;
@@ -392,7 +400,7 @@ static int calc_evm_hash(const char *file, unsigned char *hash)
 		struct h_misc_32 *hmac = (struct h_misc_32 *)&hmac_misc;
 
 		hmac_size = sizeof(*hmac);
-		hmac->ino = st.st_ino;
+		hmac->ino = ino;
 		hmac->generation = generation;
 		hmac->uid = st.st_uid;
 		hmac->gid = st.st_gid;
diff --git a/src/libimaevm.c b/src/libimaevm.c
index 2ce819fb486b..f86f57db4b8c 100644
--- a/src/libimaevm.c
+++ b/src/libimaevm.c
@@ -40,6 +40,7 @@
 
 /* should we use logger instead for library? */
 #define USE_FPRINTF
+#define _GNU_SOURCE
 
 #include <sys/types.h>
 #include <sys/param.h>
@@ -49,6 +50,7 @@
 #include <dirent.h>
 #include <string.h>
 #include <stdio.h>
+#include <attr/xattr.h>
 
 #include <openssl/pem.h>
 #include <openssl/evp.h>
@@ -219,11 +221,29 @@ static int add_dir_hash(const char *file, EVP_MD_CTX *ctx)
 	}
 
 	while ((de = readdir(dir))) {
+		char *name;
+		char buf[128] = {};
+
 		ino = de->d_ino;
 		off = de->d_off;
 		type = de->d_type;
 		log_debug("entry: %s, ino: %llu, type: %u, off: %llu, reclen: %hu\n",
 			  de->d_name, ino, type, off, de->d_reclen);
+
+		err = asprintf(&name, "%s/%s", file, de->d_name);
+		if (err == -1) {
+			log_err("failed to allocate mem\n");
+			return err;
+		}
+
+		err = lgetxattr(name, "user.image-inode-number", buf, sizeof(buf) - 1);
+		if (err > 0)
+			ino = strtoull(buf, NULL, 10);
+		else
+			ino = de->d_ino;
+
+		free(name);
+
 		err = EVP_DigestUpdate(ctx, de->d_name, strlen(de->d_name));
 		/*err |= EVP_DigestUpdate(ctx, &off, sizeof(off));*/
 		err |= EVP_DigestUpdate(ctx, &ino, sizeof(ino));
