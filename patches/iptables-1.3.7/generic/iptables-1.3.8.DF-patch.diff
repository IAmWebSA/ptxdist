
This patch adds support for ipt_DF kernel module to iptables 1.3.7 (backport).

---
 extensions/Makefile                   |    2
 extensions/libipt_DF.c                |  112 ++++++++++++++++++++++++++++++++++
 include/linux/netfilter_ipv4/ipt_DF.h |   12 +++
 3 files changed, 125 insertions(+), 1 deletion(-)

Index: iptables-1.3.7/extensions/libipt_DF.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ iptables-1.3.7/extensions/libipt_DF.c	2007-09-21 11:13:28.000000000 +0200
@@ -0,0 +1,112 @@
+/* Shared library add-on to iptables for the DF target
+ * (C) 2002 by Dmitry Labutcky <avl@strace.net>
+ *
+ * $Id: libipt_DF.c,v 1.6 2002/05/29 13:08:16 laforge Exp $
+ *
+ * This program is distributed under the terms of GNU GPL
+ */
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include <getopt.h>
+#include <iptables.h>
+
+#include <linux/netfilter_ipv4/ip_tables.h>
+#include <linux/netfilter_ipv4/ipt_DF.h>
+
+static void help(void)
+{
+
+       printf(
+"DF target v%s options\n"
+"  --clear Clear DF flag\n"
+, IPTABLES_VERSION);
+}
+
+static struct option opts[] = {
+        { "clear", 0, 0, '%' },
+        { 0 }
+};
+
+static void init(struct ipt_entry_target *t, unsigned int *nfcache)
+{
+}
+
+static int parse(int c, char **argv, int invert, unsigned int *flags,
+               const struct ipt_entry *entry,
+               struct ipt_entry_target **target)
+{
+
+       struct ipt_DF_info *info = (struct ipt_DF_info *) (*target)->data;
+
+       switch (c) {
+               case '%':
+                       if (invert)
+                         exit_error(PARAMETER_PROBLEM,"DF: unexpected `!' with --clear");
+                       if (*flags & IPT_DF_CLEAR)
+                         exit_error(PARAMETER_PROBLEM, "DF: Can't specify --clear twice");
+                       info->mode = IPT_DF_CLEAR;
+                       *flags |= IPT_DF_CLEAR;
+                       break;
+               default:
+                       return 0;
+
+       }
+
+       return 1;
+}
+
+static void final_check(unsigned int flags)
+{
+ if (!flags)
+   exit_error(PARAMETER_PROBLEM,
+              "DF target: Parameter --clear is required");
+}
+
+static void save(const struct ipt_ip *ip,
+               const struct ipt_entry_target *target)
+{
+       const struct ipt_DF_info *info =
+               (struct ipt_DF_info *) target->data;
+
+       switch (info->mode) {
+               case IPT_DF_CLEAR:
+                       printf("--clear ");
+                       break;
+       }
+}
+
+static void print(const struct ipt_ip *ip,
+               const struct ipt_entry_target *target, int numeric)
+{
+       const struct ipt_DF_info *info =
+               (struct ipt_DF_info *) target->data;
+
+       printf("DF ");
+       switch (info->mode) {
+
+               case IPT_DF_CLEAR:
+                       printf("clear df ");
+                       break;
+       }
+}
+
+static struct iptables_target DF = {
+       .next	       =       NULL,
+       .name           =       "DF",
+       .version        =       IPTABLES_VERSION,
+       .size           =       IPT_ALIGN(sizeof(struct ipt_DF_info)),
+       .userspacesize  =       IPT_ALIGN(sizeof(struct ipt_DF_info)),
+       .help           =       &help,
+       .init           =       &init,
+       .parse          =       &parse,
+       .final_check    =       &final_check,
+       .print          =       &print,
+       .save           =       &save,
+       .extra_opts     =       opts
+};
+
+void _init(void)
+{
+       register_target(&DF);
+}
Index: iptables-1.3.7/extensions/Makefile
===================================================================
--- iptables-1.3.7.orig/extensions/Makefile	2006-12-04 12:15:19.000000000 +0100
+++ iptables-1.3.7/extensions/Makefile	2007-09-21 11:14:27.000000000 +0200
@@ -5,7 +5,7 @@
 # header files are present in the include/linux directory of this iptables
 # package (HW)
 #
-PF_EXT_SLIB:=ah addrtype comment connlimit connmark conntrack dscp ecn esp hashlimit helper icmp iprange length limit mac mark multiport owner physdev pkttype policy realm rpc sctp standard state tcp tcpmss tos ttl udp unclean CLASSIFY CONNMARK DNAT DSCP ECN LOG MARK MASQUERADE MIRROR NETMAP NFQUEUE NOTRACK REDIRECT REJECT SAME SNAT TARPIT TCPMSS TOS TRACE TTL ULOG
+PF_EXT_SLIB:=ah addrtype comment connlimit connmark conntrack dscp ecn esp hashlimit helper icmp iprange length limit mac mark multiport owner physdev pkttype policy realm rpc sctp standard state tcp tcpmss tos ttl udp unclean CLASSIFY CONNMARK DNAT DSCP ECN LOG MARK MASQUERADE MIRROR NETMAP NFQUEUE NOTRACK REDIRECT REJECT SAME SNAT TARPIT TCPMSS TOS TRACE TTL ULOG DF
 PF6_EXT_SLIB:=connmark eui64 hl icmp6 length limit mac mark multiport owner physdev policy standard state tcp udp CONNMARK HL LOG NFQUEUE MARK TRACE

 ifeq ($(DO_SELINUX), 1)
Index: iptables-1.3.7/include/linux/netfilter_ipv4/ipt_DF.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ iptables-1.3.7/include/linux/netfilter_ipv4/ipt_DF.h	2007-09-21 11:13:28.000000000 +0200
@@ -0,0 +1,12 @@
+#ifndef _IPT_DF_H
+#define _IPT_DF_H
+
+enum {
+       IPT_DF_CLEAR = 1
+};
+
+struct ipt_DF_info {
+              u_int8_t        mode;
+};
+
+#endif
