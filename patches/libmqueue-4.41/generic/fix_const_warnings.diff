This patch fixes the warning:

mqueue.c: In function 'mq_notify':
mqueue.c:446: warning: passing argument 2 of 'mq_notify_sigevthread' discards qualifiers from pointer target type

---
 include/mqueue.h |    2 +-
 src/mqueue.c     |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

Index: src/mqueue.c
===================================================================
--- src/mqueue.c.orig
+++ src/mqueue.c
@@ -440,7 +440,7 @@ static int mq_notify_sigevthread(mqd_t m
 #endif
 
 
-int mq_notify(mqd_t mqdes, const struct sigevent *notification)
+int mq_notify(mqd_t mqdes, struct sigevent *notification)
 {
 	if (notification && (notification->sigev_notify == SIGEV_THREAD)) {
 #ifdef SIGEVTHREAD_SUPPORT
Index: include/mqueue.h
===================================================================
--- include/mqueue.h.orig
+++ include/mqueue.h
@@ -41,7 +41,7 @@ int mq_send(mqd_t mqdes, const char *msg
 int mq_timedsend(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec *abs_timeout);
 ssize_t mq_receive(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned int *msg_prio);
 ssize_t mq_timedreceive(mqd_t mqdes, char *__restrict msg_ptr, size_t msg_len, unsigned int *__restrict msg_prio, const struct timespec *__restrict abs_timeout);
-int mq_notify(mqd_t mqdes, const struct sigevent *notification);
+int mq_notify(mqd_t mqdes, struct sigevent *notification);
 int mq_getattr(mqd_t mqdes, struct mq_attr *mqstat);
 int mq_setattr(mqd_t mqdes, const struct mq_attr *__restrict mqstat, struct mq_attr *__restrict omqstat);
 
