# 
# Submitted:
#
# Dan Kegel 
# Sun, 17 Oct 2004 16:53:15 -0700
#
# Description: 
#
# Make python cross compile
#
# State:
# 
# unknown
#

--- Python-2.3/setup.py.foo	2004-10-17 13:49:43.000000000 -0700
+++ Python-2.3/setup.py	2004-10-17 14:17:11.000000000 -0700
@@ -244,8 +244,8 @@
 
     def detect_modules(self):
         # Ensure that /usr/local is always used
-        add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
-        add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
+        add_dir_to_list(self.compiler.library_dirs, os.getenv('DESTDIR')+'/usr/local/lib')
+        add_dir_to_list(self.compiler.include_dirs, os.getenv('DESTDIR')+'/usr/local/include')
 
         # fink installs lots of goodies in /sw/... - make sure we
         # check there
@@ -267,8 +267,8 @@
         # lib_dirs and inc_dirs are used to search for files;
         # if a file is found in one of those directories, it can
         # be assumed that no additional -I,-L directives are needed.
-        lib_dirs = self.compiler.library_dirs + ['/lib', '/usr/lib']
-        inc_dirs = self.compiler.include_dirs + ['/usr/include']
+        lib_dirs = self.compiler.library_dirs + [os.getenv('DESTDIR')+'/lib', os.getenv('DESTDIR')+'/usr/lib']
+        inc_dirs = self.compiler.include_dirs + [os.getenv('DESTDIR')+'/usr/include']
         exts = []
 
         platform = self.get_platform()
@@ -416,11 +416,11 @@
             elif self.compiler.find_library_file(lib_dirs, 'curses'):
                 readline_libs.append('curses')
             elif self.compiler.find_library_file(lib_dirs +
-                                               ['/usr/lib/termcap'],
+                                               [os.getenv('DESTDIR')+'/usr/lib/termcap'],
                                                'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
+                                   library_dirs=[os.getenv('DESTDIR')+'/usr/lib/termcap'],
                                    libraries=readline_libs) )
         if platform not in ['mac']:
                 # crypt module.
@@ -439,18 +439,18 @@
                                depends = ['socketmodule.h']) )
         # Detect SSL support for the socket module (via _ssl)
         ssl_incs = find_file('openssl/ssl.h', inc_dirs,
-                             ['/usr/local/ssl/include',
-                              '/usr/contrib/ssl/include/'
+                             [os.getenv('DESTDIR')+'/usr/local/ssl/include',
+                              os.getenv('DESTDIR')+'/usr/contrib/ssl/include/'
                              ]
                              )
         if ssl_incs is not None:
             krb5_h = find_file('krb5.h', inc_dirs,
-                               ['/usr/kerberos/include'])
+                               [os.getenv('DESTDIR')+'/usr/kerberos/include'])
             if krb5_h:
                 ssl_incs += krb5_h
         ssl_libs = find_library_file(self.compiler, 'ssl',lib_dirs,
-                                     ['/usr/local/ssl/lib',
-                                      '/usr/contrib/ssl/lib/'
+                                     [os.getenv('DESTDIR')+'/usr/local/ssl/lib',
+                                      os.getenv('DESTDIR')+'/usr/contrib/ssl/lib/'
                                      ] )
 
         if (ssl_incs is not None and
@@ -480,35 +480,35 @@
         # order you wish to search - e.g., search for db4 before db3
         db_try_this = {
             'db4': {'libs': ('db-4.1', 'db41', 'db-4.0', 'db4',),
-                    'libdirs': ('/usr/local/BerkeleyDB.4.1/lib',
-                                '/usr/local/BerkeleyDB.4.0/lib',
-                                '/usr/local/lib',
+                    'libdirs': (os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.4.1/lib',
+                                os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.4.0/lib',
+                                os.getenv('DESTDIR')+'/usr/local/lib',
                                 '/opt/sfw',
                                 '/sw/lib',
                                 ),
-                    'incdirs': ('/usr/local/BerkeleyDB.4.1/include',
-                                '/usr/local/include/db41',
-                                '/usr/local/BerkeleyDB.4.0/include',
-                                '/usr/local/include/db4',
-                                '/opt/sfw/include/db4',
-                                '/sw/include/db4',
-                                '/usr/include/db4',
+                    'incdirs': (os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.4.1/include',
+                                os.getenv('DESTDIR')+'/usr/local/include/db41',
+                                os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.4.0/include',
+                                os.getenv('DESTDIR')+'/usr/local/include/db4',
+                                os.getenv('DESTDIR')+'/opt/sfw/include/db4',
+                                os.getenv('DESTDIR')+'/sw/include/db4',
+                                os.getenv('DESTDIR')+'/usr/include/db4',
                                 )},
             'db3': {'libs': ('db-3.3', 'db-3.2', 'db-3.1', 'db3',),
-                    'libdirs': ('/usr/local/BerkeleyDB.3.3/lib',
-                                '/usr/local/BerkeleyDB.3.2/lib',
-                                '/usr/local/BerkeleyDB.3.1/lib',
-                                '/usr/local/lib',
-                                '/opt/sfw/lib',
-                                '/sw/lib',
+                    'libdirs': (os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.3.3/lib',
+                                os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.3.2/lib',
+                                os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.3.1/lib',
+                                os.getenv('DESTDIR')+'/usr/local/lib',
+                                os.getenv('DESTDIR')+'/opt/sfw/lib',
+                                os.getenv('DESTDIR')+'/sw/lib',
                                 ),
-                    'incdirs': ('/usr/local/BerkeleyDB.3.3/include',
-                                '/usr/local/BerkeleyDB.3.2/include',
-                                '/usr/local/BerkeleyDB.3.1/include',
-                                '/usr/local/include/db3',
-                                '/opt/sfw/include/db3',
-                                '/sw/include/db3',
-                                '/usr/include/db3',
+                    'incdirs': (os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.3.3/include',
+                                os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.3.2/include',
+                                os.getenv('DESTDIR')+'/usr/local/BerkeleyDB.3.1/include',
+                                os.getenv('DESTDIR')+'/usr/local/include/db3',
+                                os.getenv('DESTDIR')+'/opt/sfw/include/db3',
+                                os.getenv('DESTDIR')+'/sw/include/db3',
+                                os.getenv('DESTDIR')+'/usr/include/db3',
                                 )},
             }
 
@@ -912,7 +912,7 @@
         # For 8.4a2, the X11 headers are not included. Rather than include a
         # complicated search, this is a hard-coded path. It could bail out
         # if X11 libs are not found...
-        include_dirs.append('/usr/X11R6/include')
+        include_dirs.append(os.getenv('DESTDIR')+'/usr/X11R6/include')
         frameworks = ['-framework', 'Tcl', '-framework', 'Tk']
 
         ext = Extension('_tkinter', ['_tkinter.c', 'tkappinit.c'],
@@ -953,8 +953,8 @@
         if tklib and tcllib:
             # Check for the include files on Debian, where
             # they're put in /usr/include/{tcl,tk}X.Y
-            debian_tcl_include = [ '/usr/include/tcl' + version ]
-            debian_tk_include =  [ '/usr/include/tk'  + version ] + \
+            debian_tcl_include = [ os.getenv('DESTDIR')+'/usr/include/tcl' + version ]
+            debian_tk_include =  [ os.getenv('DESTDIR')+'/usr/include/tk'  + version ] + \
                                  debian_tcl_include
             tcl_includes = find_file('tcl.h', inc_dirs, debian_tcl_include)
             tk_includes = find_file('tk.h', inc_dirs, debian_tk_include)
@@ -975,16 +975,16 @@
         if platform == 'sunos5':
             include_dirs.append('/usr/openwin/include')
             added_lib_dirs.append('/usr/openwin/lib')
-        elif os.path.exists('/usr/X11R6/include'):
-            include_dirs.append('/usr/X11R6/include')
-            added_lib_dirs.append('/usr/X11R6/lib')
-        elif os.path.exists('/usr/X11R5/include'):
-            include_dirs.append('/usr/X11R5/include')
-            added_lib_dirs.append('/usr/X11R5/lib')
+        elif os.path.exists(os.getenv('DESTDIR')+'/usr/X11R6/include'):
+            include_dirs.append(os.getenv('DESTDIR')+'/usr/X11R6/include')
+            added_lib_dirs.append(os.getenv('DESTDIR')+'/usr/X11R6/lib')
+        elif os.path.exists(os.getenv('DESTDIR')+'/usr/X11R5/include'):
+            include_dirs.append(os.getenv('DESTDIR')+'/usr/X11R5/include')
+            added_lib_dirs.append(os.getenv('DESTDIR')+'/usr/X11R5/lib')
         else:
             # Assume default location for X11
-            include_dirs.append('/usr/X11/include')
-            added_lib_dirs.append('/usr/X11/lib')
+            include_dirs.append(os.getenv('DESTDIR')+'/usr/X11/include')
+            added_lib_dirs.append(os.getenv('DESTDIR')+'/usr/X11/lib')
 
         # If Cygwin, then verify that X is installed before proceeding
         if platform == 'cygwin':
--- Python-2.3/Makefile.pre.in.foo	2004-10-17 14:18:45.000000000 -0700
+++ Python-2.3/Makefile.pre.in	2004-10-17 14:19:35.000000000 -0700
@@ -317,8 +317,8 @@
 # Build the shared modules
 sharedmods: $(BUILDPYTHON)
 	case $$MAKEFLAGS in \
-	*-s*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py -q build;; \
-	*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py build;; \
+	*-s*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' DESTDIR='$(DESTDIR)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py -q build;; \
+	*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' DESTDIR='$(DESTDIR)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py build;; \
 	esac
 
 # buildno should really depend on something like LIBRARY_SRC
