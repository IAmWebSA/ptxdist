# 
# Submitted-By: Marc Kleine-Budde, 2005-04-21
#
# Error: 
#
# when using module-init-tools's depmod against 2.4 kernels, it will
# try to call 'depmod.old', regardless it's own name.
#
# Description: 
#
# e.g.: arm-softfloat-linux-gnu-depmod calls depmod.old
# the target-tuple gets lost. This patch fixes that.
# now arm-softfloat-linux-gnu-depmod will call
# arm-softfloat-linux-gnu-depmod.old
# 
diff -ru module-init-tools-3.2-pre1-orig/depmod.c module-init-tools-3.2-pre1/depmod.c
--- module-init-tools-3.2-pre1-orig/depmod.c	2005-01-18 06:54:59.000000000 +0100
+++ module-init-tools-3.2-pre1/depmod.c	2005-04-21 12:51:29.000000000 +0200
@@ -212,15 +212,10 @@
 
 static void exec_old_depmod(char *argv[])
 {
-	char *sep;
-	char pathname[strlen(argv[0])+1];
-	char oldname[strlen("depmod") + strlen(argv[0]) + sizeof(".old")];
-
-	memset(pathname, 0, strlen(argv[0])+1);
-	sep = strrchr(argv[0], '/');
-	if (sep)
-		memcpy(pathname, argv[0], sep - argv[0]+1);
-	sprintf(oldname, "%s%s.old", pathname, "depmod");
+	char *old = ".old";
+	char oldname[strlen(argv[0]) + strlen(old) + 1];
+
+	sprintf(oldname, "%s%s", argv[0], old);
 
 	/* Recursion detection: we need an env var since we can't
 	   change argv[0] (as older modutils uses it to determine
