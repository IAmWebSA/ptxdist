#
# Submitted:
#
# Marc Kleine-Budde <kleine-budde@gmx.de>, 2005-08-16
#
# Error:
#
# make[3]: Entering directory
# `/home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/xchain-gdb-6.3-build/sim/arm'
#  gcc -c -DHAVE_CONFIG_H -DPROFILE=1 -DWITH_PROFILE=-1
# -DDEFAULT_INLINE=0 -DMODET -DNEED_UI_LOOP_HOOK -DSIM_TARGET_SWITCHES
# -I. -I/home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm
# -I../common
# -I/home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/../common
# -I../../include
# -I/home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/../../include
# -I../../bfd
# -I/home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/../../bfd
# -I../../opcodes
# -I/home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/../../opcodes
# -I../../intl
# -I/home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/../../intl
# -g -O2
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:
# In function 'WMAC':
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2117:
# error: invalid lvalue in assignment
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2133:
# error: invalid lvalue in assignment
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:
# In function 'WMADD':
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2169:
# error: invalid lvalue in assignment
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2177:
# error: invalid lvalue in assignment
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2186:
# error: invalid lvalue in assignment
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2191:
# error: invalid lvalue in assignment
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:
# In function 'WSLL':
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2840:
# warning: integer constant is too large for 'long' type
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:
# In function 'WSRA':
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2917:
# warning: integer constant is too large for 'long' type
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2917:
# warning: integer constant is too large for 'long' type
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2919:
# warning: integer constant is too large for 'long' type
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:
# In function 'WSRL':
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:2988:
# warning: integer constant is too large for 'long' type
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:
# In function 'WUNPCKEH':
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:3290:
# warning: integer constant is too large for 'long' type
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:
# In function 'WUNPCKEL':
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:3357:
# warning: integer constant is too large for 'long' type
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:
# In function 'Fetch_Iwmmxt_Register':
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:3707:
# warning: incompatible implicit declaration of built-in function
# 'memcpy'
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:3712:
# warning: incompatible implicit declaration of built-in function
# 'memcpy'
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:
# In function 'Store_Iwmmxt_Register':
# /home/frogger/pengutronix/pii/ptxdist-0.7-trunk/build/gdb-6.3/sim/arm/iwmmxt.c:3722:
# warning: incompatible implicit declaration of built-in function
# 'memcpy'
#
# Description:
#
# gcc-4.x problem
#
#
# State:
#
# fixed upstream. this is a cvs diff from:
# http://sources.redhat.com/cgi-bin/cvsweb.cgi/src/sim/arm/iwmmxt.c.diff?r1=1.1&r2=1.2&cvsroot=src
#
diff -ruN gdb-6.3-orig/sim/arm/iwmmxt.c gdb-6.3/sim/arm/iwmmxt.c
--- gdb-6.3-orig/sim/arm/iwmmxt.c	2003-03-27 18:13:33.000000000 +0100
+++ gdb-6.3/sim/arm/iwmmxt.c	2005-08-16 19:53:37.853029968 +0200
@@ -2114,7 +2114,7 @@
 
 	  s = (signed long) a * (signed long) b;
 
-	  (signed long long) t += s;
+	  t = t + (ARMdword) s;
         }
       else
         {
@@ -2130,7 +2130,7 @@
     wR [BITS (12, 15)] = 0;
 
   if (BIT (21))	/* Signed.  */
-    (signed long long) wR[BITS (12, 15)] += (signed long long) t;
+    wR[BITS (12, 15)] += t;
   else
     wR [BITS (12, 15)] += t;
 
@@ -2166,7 +2166,7 @@
 	  b = wRHALF (BITS (0, 3), i * 2);
 	  b = EXTEND16 (b);
 
-	  (signed long) s1 = a * b;
+	  s1 = (ARMdword) (a * b);
 
 	  a = wRHALF (BITS (16, 19), i * 2 + 1);
 	  a = EXTEND16 (a);
@@ -2174,7 +2174,7 @@
 	  b = wRHALF (BITS (0, 3), i * 2 + 1);
 	  b = EXTEND16 (b);
 
-	  (signed long) s2 = a * b;
+	  s2 = (ARMdword) (a * b);
         }
       else			/* Unsigned.  */
         {
@@ -2183,12 +2183,12 @@
 	  a = wRHALF (BITS (16, 19), i * 2);
 	  b = wRHALF (BITS ( 0,  3), i * 2);
 
-	  (unsigned long) s1 = a * b;
+	  s1 = (ARMdword) (a * b);
 
 	  a = wRHALF (BITS (16, 19), i * 2 + 1);
 	  b = wRHALF (BITS ( 0,  3), i * 2 + 1);
 
-	  (signed long) s2 = a * b;
+	  s2 = (ARMdword) a * b;
         }
 
       r |= (ARMdword) ((s1 + s2) & 0xffffffff) << (i ? 32 : 0);
@@ -2837,7 +2837,7 @@
       if (shift > 63)
 	r = 0;
       else
-	r = ((wR[BITS (16, 19)] & 0xffffffffffffffff) << shift);
+	r = ((wR[BITS (16, 19)] & 0xffffffffffffffffULL) << shift);
 
       SIMD64_SET (psr, NBIT64 (r), SIMD_NBIT);
       SIMD64_SET (psr, ZBIT64 (r), SIMD_ZBIT);
@@ -2914,9 +2914,9 @@
       
     case Dqual:
       if (shift > 63)
-	r = (wR [BITS (16, 19)] & 0x8000000000000000) ? 0xffffffffffffffff : 0;
+	r = (wR [BITS (16, 19)] & 0x8000000000000000ULL) ? 0xffffffffffffffffULL : 0;
       else
-	r = ((signed long long) (wR[BITS (16, 19)] & 0xffffffffffffffff) >> shift);
+	r = ((signed long long) (wR[BITS (16, 19)] & 0xffffffffffffffffULL) >> shift);
       SIMD64_SET (psr, NBIT64 (r), SIMD_NBIT);
       SIMD64_SET (psr, ZBIT64 (r), SIMD_ZBIT);
       break;
@@ -2985,7 +2985,7 @@
       if (shift > 63)
 	r = 0;
       else
-	r = (wR [BITS (16, 19)] & 0xffffffffffffffff) >> shift;
+	r = (wR [BITS (16, 19)] & 0xffffffffffffffffULL) >> shift;
 
       SIMD64_SET (psr, NBIT64 (r), SIMD_NBIT);
       SIMD64_SET (psr, ZBIT64 (r), SIMD_ZBIT);
@@ -3287,7 +3287,7 @@
       r = wRWORD (BITS (16, 19), 1);
 
       if (BIT (21) && NBIT32 (r))
-	r |= 0xffffffff00000000;
+	r |= 0xffffffff00000000ULL;
 
       SIMD64_SET (psr, NBIT64 (r), SIMD_NBIT);
       SIMD64_SET (psr, ZBIT64 (r), SIMD_ZBIT);
@@ -3354,7 +3354,7 @@
       r = wRWORD (BITS (16, 19), 0);
 
       if (BIT (21) && NBIT32 (r))
-	r |= 0xffffffff00000000;
+	r |= 0xffffffff00000000ULL;
 
       SIMD64_SET (psr, NBIT64 (r), SIMD_NBIT);
       SIMD64_SET (psr, ZBIT64 (r), SIMD_ZBIT);
